import pytest
from make_requests_test import *
from wellformedness import verify_wellformedness
import config

data = open("WF_correct.xml", 'r')
string1 = data.read()
string1 = bytes(bytearray(string1, encoding='utf-8'))

data2 = open("WF_incorrect.xml", 'r')
string2 = data2.read()
string2 = bytes(bytearray(string2, encoding='utf-8'))
    
# Whitebox testing
def test_wellformedness_invoice_correct():
    assert(verify_wellformedness(string1) == {'broken_rules': 'No broken rules found. Invoice is well-formed!'} )

def test_wellformedness_invoice_errors():
    assert(verify_wellformedness(string2) == {'broken_rules': ["ERROR ON LINE 23: Failed to parse QName 'cbc:'", 'ERROR ON LINE 23: Opening and ending tag mismatch: CityName line 23 and cbc:', 
                                                                       'ERROR ON LINE 33: Opening and ending tag mismatch: PartyName line 19 and Party', 
                                                                       'ERROR ON LINE 34: Opening and ending tag mismatch: Party line 15 and AccountingSupplierParty', 
                                                                       'ERROR ON LINE 101: Opening and ending tag mismatch: AccountingSupplierParty line 14 and Invoice', 
                                                                       'ERROR ON LINE 101: Premature end of data in tag Invoice line 2']}                                                                   

xml = """<?xml version='1.0' encoding='utf-8'?>
<a>6</a>"""

# Blackbox/HTTP Testing
def test_wellformedness_no_invoice():
    r = requests.post(config.url + 'invoice/verify/wellformedness', ata=xml)
    assert  verify_wellformedness().statuscode == 400

'''
